#+TITLE: Présidentielles 2022
#+SUBTITLE: Cahier de laboratoire

Dans ce document nous recensons les analyses que nous avons pu faire au jour le jours.

#+description: Load the virtual environment
#+begin_src elisp :exports none
(pyvenv-workon 'polls)
#+end_src

#+description: Import needed libraries
#+begin_src python :session :results silent :exports none
import src.intentions as intentions
import numpy as np
import pymc3 as pm
#+end_src

* Color schemes :noexport:

#+description: Pastel colors
#+begin_src python :session :results silent :exports none
colors = {
    "Poutou": "#FF9AA2",
    "Arthaud": "#FF9AA2",
    "Roussel": "#FF9AA2",
    "Mélenchon": "#FFB7B2",
    "Hidalgo": "#FFDAC1",
    "Jadot": "#E2F0CB",
    "Montebourg": "#FFDAC1",
    "Macron": "#C7CEEA",
    "Pécresse": "#C7CEEA",
    "Lassalle": "#C7CEEA",
    "Zemmour": "#141517",
    "Dupont-Aignan": "#C7CEEA",
    "Le Pen": "#9597A0",
}
#+end_src

#+description: Darker colors from coolors.com
#+begin_src python :session :results silent :exports none
colors = {
    "Poutou": "#DD1C1A",
    "Arthaud": "#DD1C1A",
    "Roussel": "#DD1C1A",
    "Mélenchon": "#E85D75",
    "Hidalgo": "#FF7F11",
    "Jadot": "#B2C9AB",
    "Montebourg": "#FF7F11",
    "Macron": "#748CAB",
    "Pécresse": "#748CAB",
    "Lassalle": "#748CAB",
    "Zemmour": "#080708",
    "Dupont-Aignan": "#2E294E",
    "Le Pen": "#292F36",
}
#+end_src

* Décembre 2021
** Odoxa 09.12
:PROPERTIES:
    :BEGIN: 07/12/2021
    :END: 09/12/2021
    :BASE: Comptant aller voter
:END:

Premier sondage d'Odoxa après l'officialisation de la candidature de Pécresse pour Les Républicains.

#+begin_src python :session :results silent
num_exprimes = 1391
resultats = {
    "Arthaud": 1,
    "Poutou": 1.5,
    "Roussel": 2,
    "Mélenchon": 10,
    "Montebourg": 1,
    "Hidalgo": 3,
    "Jadot": 6,
    "Macron": 24,
    "Pécresse": 19,
    "Dupont-Aignan": 2.5,
    "Zemmour": 12,
    "Le Pen": 17,
    "Lassalle": 1,
}
assert sum(list(resultats.values())) == 100
#+end_src

#+begin_src python :session :async true :results silent
with pm.Model() as bva:
    prior_intentions = np.array(
        [2, 2, 3, 10, 3, 5, 5, 20, 15, 2, 15, 20, 1]
    ) / 100

    results_r = np.array(list(resultats.values())) / 100
    p = pm.Dirichlet("intentions", prior_intentions)  # Prior too vague?
    r = pm.Dirichlet("real_ratios", num_exprimes * p, observed=results_r)

    trace = pm.sample()
#+end_src

#+begin_src python :session :results file :exports results :var filename=(org-babel-temp-file "figure" ".png")
import arviz as az
import matplotlib.pyplot as plt

az.plot_trace(trace)
plt.savefig(filename, bbox_inches='tight')
filename
#+end_src

#+RESULTS:
[[file:/tmp/babel-KLeE5y/figureGCXCRN.png]]

#+begin_src python :session :results file :exports results :var filename=(org-babel-temp-file "figure" ".png")
intentions_r = {k: trace['intentions'][:,i] for i,k in enumerate(resultats.keys())}
fig = intentions.plot(
    intentions_r,
    colors,
    "09/12/2021",
    "Odoxa pour L'OBS et mascaret",
    title="Intentions de vote au premier tour",
    sample_size=num_exprimes,
    base="Comptant aller voter et exprimant une opinion",
    logo_path="~/org/roam/images/logo.png"
)
plt.tight_layout()
plt.savefig(filename, dpi=600, bbox_inches="tight")
filename
#+end_src
#+attr_org: :width 500
#+RESULTS:
[[file:/tmp/babel-KLeE5y/figureEp8Kky.png]]

** BVA 08.12
:PROPERTIES:
    :BEGIN: 06/12/2021
    :END: 08/12/2021
    :BASE: Certaines d'aller voter
:END:

#+begin_src python :session bva
num_exprimes = 894
resultats = {
    "Arthaud": .5,
    "Poutou": 1.5,
    "Mélenchon": 9,
    "Roussel": 2.5,
    "Montebourg": 1,
    "Hidalgo": 5,
    "Jadot": 7,
    "Macron": 24,
    "Pécresse": 17,
    "Dupont-Aignan": 2.5,
    "Zemmour": 13,
    "Le Pen": 16,
    "Lassalle": 1,
}
assert sum(list(resultats.values())) == 100
#+end_src

#+begin_src python :session bva :async true
with pm.Model() as bva:
    prior_intentions = np.array(
        [2, 2, 10, 3, 3, 5, 5, 20, 15, 2, 15, 20, 1]
    ) / 100

    results_r = np.array(list(resultats.values())) / 100
    p = pm.Dirichlet("intentions", prior_intentions)  # Prior too vague?
    r = pm.Dirichlet("real_ratios", num_exprimes * p, observed=results_r)

    trace = pm.sample()
#+end_src


#+RESULTS:

#+begin_src python :session  bva :results file :exports results :var filename=(org-babel-temp-file "figure" ".png")
import arviz as az
import matplotlib.pyplot as plt

az.plot_trace(trace)
plt.savefig(filename, bbox_inches='tight')
filename
#+end_src

#+RESULTS:
[[file:/tmp/babel-KLeE5y/figurecfNdrS.png]]

#+begin_src python :session bva :results file :exports results :var filename=(org-babel-temp-file "figure" ".png")
intentions_r = {k: trace['intentions'][:,i] for i,k in enumerate(resultats.keys())}
fig = intentions.plot(
    intentions_r,
    colors,
    "08/12/2021",
    "BVA pour Orange et RTL",
    title="Intentions de vote au premier tour",
    sample_size=num_exprimes,
    base="Certains d'aller voter et exprimant une opinion",
    logo_path="~/org/roam/images/logo.png"
)
plt.tight_layout()
plt.savefig(filename, dpi=600, bbox_inches="tight")
filename
#+end_src

#+attr_org: :width 600
#+RESULTS:
[[file:/tmp/babel-KLeE5y/figurej68siq.png]]

Il serait quand même judicieux de mettre les gens n'ayant pas exprimé d'opinion sur les graphes.
